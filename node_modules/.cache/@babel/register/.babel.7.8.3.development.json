{
  "{\"sourceRoot\":\"/Users/chandlerkeyes/Development/PersonalProjects/mocha-tests/test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/chandlerkeyes/Development/PersonalProjects/mocha-tests\",\"filename\":\"/Users/chandlerkeyes/Development/PersonalProjects/mocha-tests/test/index.spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chandlerkeyes/Development/PersonalProjects/mocha-tests\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chandlerkeyes/Development/PersonalProjects/mocha-tests/test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/chandlerkeyes/Development/PersonalProjects/mocha-tests",
      "filename": "/Users/chandlerkeyes/Development/PersonalProjects/mocha-tests/test/index.spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chandlerkeyes/Development/PersonalProjects/mocha-tests",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chandlerkeyes/Development/PersonalProjects/mocha-tests/test/index.spec.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/chandlerkeyes/Development/PersonalProjects/mocha-tests/test/index.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chandlerkeyes/Development/PersonalProjects/mocha-tests/test",
        "sourceFileName": "index.spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _chai = require(\"chai\");\n\nvar _src = _interopRequireDefault(require(\"../src/\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\ndescribe(\"Pencil Durability Kata Tests\", function () {\n  describe(\"Writing\", function () {\n    it(\"Writes Hello World! on a blank piece of paper\", function () {\n      var pencil = new _src[\"default\"]();\n      var result = pencil.writeOnPaper(\"\", \"Hello World!\");\n      (0, _chai.expect)(result).to.equal(\"Hello World!\");\n    });\n    it(\"Writes Goodbye! on a blank piece of paper\", function () {\n      var pencil = new _src[\"default\"]();\n      var result = pencil.writeOnPaper(\"\", \"Goodbye!\");\n      (0, _chai.expect)(result).to.equal(\"Goodbye!\");\n    });\n    it(\"Writes text to paper that already has text written on it\", function () {\n      var pencil = new _src[\"default\"]();\n      var paper = \"Hi, my name is Chandler \";\n      var result = pencil.writeOnPaper(paper, \"and I love to code!\");\n      (0, _chai.expect)(result).to.equal(\"Hi, my name is Chandler and I love to code!\");\n    });\n    it(\"Decreases pencil durability by 5 after writing 'hello' with a durability of 50\", function () {\n      var pencil = new _src[\"default\"](50);\n      var paper = '';\n      pencil.writeOnPaper(paper, \"hello\");\n      var result = pencil.getPencilDurability();\n      (0, _chai.expect)(result).to.equal(45);\n    });\n    it(\"Decreases pencil durability by 10 after writing 'hello world' with a durability of 50\", function () {\n      var pencil = new _src[\"default\"](50);\n      var paper = '';\n      pencil.writeOnPaper(paper, \"hello world\");\n      var result = pencil.getPencilDurability();\n      (0, _chai.expect)(result).to.equal(40);\n    });\n    it(\"Decreases pencil durability by 9 after writing 'Chandler' with a durability of 50\", function () {\n      var pencil = new _src[\"default\"](50);\n      var paper = '';\n      pencil.writeOnPaper(paper, \"Chandler\");\n      var result = pencil.getPencilDurability();\n      (0, _chai.expect)(result).to.equal(41);\n    });\n    it(\"Writes CHANDLER with a durability of 10 and returns 'CHAND   '\", function () {\n      var pencil = new _src[\"default\"](10);\n      var paper = '';\n      var result = pencil.writeOnPaper(paper, \"CHANDLER\");\n      (0, _chai.expect)(result).to.equal(\"CHAND   \");\n    });\n  });\n  describe(\"Sharpening\", function () {\n    it(\"Resets the durability of the pencil to 10 after sharpening pencil\", function () {\n      var pencil = new _src[\"default\"](10);\n      var paper = '';\n      pencil.writeOnPaper(paper, \"Hi!\");\n      pencil.sharpen();\n      var result = pencil.getPencilDurability();\n      (0, _chai.expect)(result).to.equal(10);\n    });\n    it(\"Resets the durability of the pencil to 20 after sharpening pencil\", function () {\n      var pencil = new _src[\"default\"](20);\n      var paper = '';\n      pencil.writeOnPaper(paper, \"Hello again!\");\n      pencil.sharpen();\n      var result = pencil.getPencilDurability();\n      (0, _chai.expect)(result).to.equal(20);\n    });\n    it(\"Decreases length of pencil by 1 after being sharpened with an initial length of 50\", function () {\n      var pencil = new _src[\"default\"](50, 50);\n      pencil.sharpen();\n      var result = pencil.getPencilLength();\n      (0, _chai.expect)(result).to.equal(49);\n    });\n    it(\"Decreases length by 5 after being sharpened 5 times with an initial length of 50\", function () {\n      var pencil = new _src[\"default\"](50, 50);\n      pencil.sharpen();\n      pencil.sharpen();\n      pencil.sharpen();\n      pencil.sharpen();\n      pencil.sharpen();\n      var result = pencil.getPencilLength();\n      (0, _chai.expect)(result).to.equal(45);\n    });\n    it(\"Disallows pencil to be sharpened after length reaches 0\", function () {\n      var pencil = new _src[\"default\"](50, 2);\n      pencil.sharpen();\n      pencil.sharpen();\n      pencil.sharpen();\n      var result = pencil.getPencilLength();\n      (0, _chai.expect)(result).to.equal(0);\n    });\n  });\n  describe(\"Erasing\", function () {\n    it(\"Erases the last instance of 'sea' off the paper with text\", function () {\n      var pencil = new _src[\"default\"]();\n      var paper = \"She sells sea shells by the sea shore\";\n      var result = pencil.erase(paper, \"sea\");\n      (0, _chai.expect)(result).to.equal(\"She sells sea shells by the     shore\");\n    });\n    it(\"Erases the last instance of 'sells' off the paper with text\", function () {\n      var pencil = new _src[\"default\"](20);\n      var paper = \"She sells sea shells by the sea shore\";\n      var result = pencil.erase(paper, \"sells\");\n      (0, _chai.expect)(result).to.equal(\"She       sea shells by the sea shore\");\n    });\n    it(\"Erases nothing if the text provided is not found\", function () {\n      var pencil = new _src[\"default\"](20);\n      var paper = \"She sells sea shells by the sea shore\";\n      var result = pencil.erase(paper, \"apples\");\n      (0, _chai.expect)(result).to.equal(undefined);\n    });\n    it(\"Decreases eraser durability by 5 after erasing 'shore'\", function () {\n      var pencil = new _src[\"default\"](50, 50, 20);\n      var paper = \"She sells sea shells by the sea shore\";\n      pencil.erase(paper, \"shore\");\n      var result = pencil.getEraserDurability();\n      (0, _chai.expect)(result).to.equal(15);\n    });\n    it(\"Decreases eraser durability by 10 after erasing 'he sea shore'\", function () {\n      var pencil = new _src[\"default\"](50, 50, 20);\n      var paper = \"She sells sea shells by the sea shore\";\n      pencil.erase(paper, \"he sea shore\");\n      var result = pencil.getEraserDurability();\n      (0, _chai.expect)(result).to.equal(10);\n    });\n  });\n  describe(\"Editing\", function () {\n    it(\"Replaces the blank space with apple\", function () {\n      var pencil = new _src[\"default\"]();\n      var paper = \"An       a day keeps the doctor away\";\n      var result = pencil.edit(paper, \"apple\");\n      (0, _chai.expect)(result).to.equal(\"An apple a day keeps the doctor away\");\n    });\n    it(\"Replaces the blank space with avocado, overriding text gets replaced with @\", function () {\n      var pencil = new _src[\"default\"]();\n      var paper = \"An       a day keeps the doctor away\";\n      var result = pencil.edit(paper, \"avocado\");\n      (0, _chai.expect)(result).to.equal(\"An avocad@ day keeps the doctor away\");\n    });\n    it(\"Edits nothing if blank space is not found\", function () {\n      var pencil = new _src[\"default\"]();\n      var paper = \"An apple a day keeps the doctor away\";\n      var result = pencil.edit(paper, \"avocado\");\n      (0, _chai.expect)(result).to.equal(undefined);\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.spec.js"
      ],
      "names": [
        "describe",
        "it",
        "pencil",
        "Pencil",
        "result",
        "writeOnPaper",
        "to",
        "equal",
        "paper",
        "getPencilDurability",
        "sharpen",
        "getPencilLength",
        "erase",
        "undefined",
        "getEraserDurability",
        "edit"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/chandlerkeyes/Development/PersonalProjects/mocha-tests/test",
      "sourcesContent": [
        "import { expect } from \"chai\"\nimport Pencil from \"../src/\";\n\ndescribe(\"Pencil Durability Kata Tests\", () => {\n  describe(\"Writing\", () => {\n    it(\"Writes Hello World! on a blank piece of paper\", () => {\n      const pencil = new Pencil();\n      const result = pencil.writeOnPaper(\"\", \"Hello World!\");\n\n      expect(result).to.equal(\"Hello World!\");\n    });\n\n    it(\"Writes Goodbye! on a blank piece of paper\", () => {\n      const pencil = new Pencil();\n      const result = pencil.writeOnPaper(\"\", \"Goodbye!\");\n\n      expect(result).to.equal(\"Goodbye!\");\n    });\n\n    it(\"Writes text to paper that already has text written on it\", () => {\n      const pencil = new Pencil();\n      const paper = \"Hi, my name is Chandler \";\n      const result = pencil.writeOnPaper(paper, \"and I love to code!\");\n\n      expect(result).to.equal(\"Hi, my name is Chandler and I love to code!\");\n    });\n\n    it(\"Decreases pencil durability by 5 after writing 'hello' with a durability of 50\", () => {\n      const pencil = new Pencil(50);\n      const paper = '';\n\n      pencil.writeOnPaper(paper, \"hello\")\n\n      const result = pencil.getPencilDurability();\n\n      expect(result).to.equal(45);\n    });\n\n    it(\"Decreases pencil durability by 10 after writing 'hello world' with a durability of 50\", () => {\n      const pencil = new Pencil(50);\n      const paper = '';\n\n      pencil.writeOnPaper(paper, \"hello world\");\n\n      const result = pencil.getPencilDurability();\n\n      expect(result).to.equal(40);\n    });\n\n    it(\"Decreases pencil durability by 9 after writing 'Chandler' with a durability of 50\", () => {\n      const pencil = new Pencil(50);\n      const paper = '';\n\n      pencil.writeOnPaper(paper, \"Chandler\");\n\n      const result = pencil.getPencilDurability();\n\n      expect(result).to.equal(41);\n    });\n\n    it(\"Writes CHANDLER with a durability of 10 and returns 'CHAND   '\", () => {\n      const pencil = new Pencil(10);\n      const paper = '';\n\n      const result = pencil.writeOnPaper(paper, \"CHANDLER\");\n\n      expect(result).to.equal(\"CHAND   \");\n    });\n  })\n\n  describe(\"Sharpening\", () => {\n    it(\"Resets the durability of the pencil to 10 after sharpening pencil\", () => {\n      const pencil = new Pencil(10);\n      const paper = '';\n\n      pencil.writeOnPaper(paper, \"Hi!\");\n      pencil.sharpen();\n\n      const result = pencil.getPencilDurability();\n\n      expect(result).to.equal(10);\n    });\n\n    it(\"Resets the durability of the pencil to 20 after sharpening pencil\", () => {\n      const pencil = new Pencil(20);\n      const paper = '';\n\n      pencil.writeOnPaper(paper, \"Hello again!\");\n      pencil.sharpen();\n\n      const result = pencil.getPencilDurability();\n\n      expect(result).to.equal(20);\n    });\n\n    it(\"Decreases length of pencil by 1 after being sharpened with an initial length of 50\", () => {\n      const pencil = new Pencil(50, 50);\n\n      pencil.sharpen();\n\n      const result = pencil.getPencilLength();\n\n      expect(result).to.equal(49);\n    });\n\n    it(\"Decreases length by 5 after being sharpened 5 times with an initial length of 50\", () => {\n      const pencil = new Pencil(50, 50);\n\n      pencil.sharpen();\n      pencil.sharpen();\n      pencil.sharpen();\n      pencil.sharpen();\n      pencil.sharpen();\n\n      const result = pencil.getPencilLength();\n\n      expect(result).to.equal(45);\n    });\n\n    it(\"Disallows pencil to be sharpened after length reaches 0\", () => {\n      const pencil = new Pencil(50, 2);\n\n      pencil.sharpen();\n      pencil.sharpen();\n      pencil.sharpen();\n\n      const result = pencil.getPencilLength();\n\n      expect(result).to.equal(0);\n    });\n  })\n\n  describe(\"Erasing\", () => {\n    it(\"Erases the last instance of 'sea' off the paper with text\", () => {\n      const pencil = new Pencil();\n      const paper = \"She sells sea shells by the sea shore\";\n\n      const result = pencil.erase(paper, \"sea\");\n\n      expect(result).to.equal(\"She sells sea shells by the     shore\");\n    });\n\n    it(\"Erases the last instance of 'sells' off the paper with text\", () => {\n      const pencil = new Pencil(20);\n      const paper = \"She sells sea shells by the sea shore\";\n\n      const result = pencil.erase(paper, \"sells\");\n\n      expect(result).to.equal(\"She       sea shells by the sea shore\");\n    });\n\n    it(\"Erases nothing if the text provided is not found\", () => {\n      const pencil = new Pencil(20);\n      const paper = \"She sells sea shells by the sea shore\";\n\n      const result = pencil.erase(paper, \"apples\");\n\n      expect(result).to.equal(undefined);\n    });\n\n    it(\"Decreases eraser durability by 5 after erasing 'shore'\", () => {\n      const pencil = new Pencil(50, 50, 20);\n      const paper = \"She sells sea shells by the sea shore\";\n\n      pencil.erase(paper, \"shore\");\n\n      const result = pencil.getEraserDurability();\n\n      expect(result).to.equal(15);\n    });\n\n    it(\"Decreases eraser durability by 10 after erasing 'he sea shore'\", () => {\n      const pencil = new Pencil(50, 50, 20);\n      const paper = \"She sells sea shells by the sea shore\";\n\n      pencil.erase(paper, \"he sea shore\");\n\n      const result = pencil.getEraserDurability();\n\n      expect(result).to.equal(10);\n    });\n  })\n\n  describe(\"Editing\", () => {\n    it(\"Replaces the blank space with apple\", () => {\n      const pencil = new Pencil();\n      const paper = \"An       a day keeps the doctor away\";\n\n      const result = pencil.edit(paper, \"apple\");\n\n      expect(result).to.equal(\"An apple a day keeps the doctor away\");\n    });\n\n    it(\"Replaces the blank space with avocado, overriding text gets replaced with @\", () => {\n      const pencil = new Pencil();\n      const paper = \"An       a day keeps the doctor away\";\n\n      const result = pencil.edit(paper, \"avocado\");\n\n      expect(result).to.equal(\"An avocad@ day keeps the doctor away\");\n    });\n\n    it(\"Edits nothing if blank space is not found\", () => {\n      const pencil = new Pencil();\n      const paper = \"An apple a day keeps the doctor away\";\n\n      const result = pencil.edit(paper, \"avocado\");\n\n      expect(result).to.equal(undefined);\n    });\n  })\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1579628541679
  },
  "{\"sourceRoot\":\"/Users/chandlerkeyes/Development/PersonalProjects/mocha-tests/src\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/chandlerkeyes/Development/PersonalProjects/mocha-tests\",\"filename\":\"/Users/chandlerkeyes/Development/PersonalProjects/mocha-tests/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/chandlerkeyes/Development/PersonalProjects/mocha-tests\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/chandlerkeyes/Development/PersonalProjects/mocha-tests/src",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/chandlerkeyes/Development/PersonalProjects/mocha-tests",
      "filename": "/Users/chandlerkeyes/Development/PersonalProjects/mocha-tests/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/chandlerkeyes/Development/PersonalProjects/mocha-tests",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/chandlerkeyes/Development/PersonalProjects/mocha-tests/src/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/chandlerkeyes/Development/PersonalProjects/mocha-tests/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/chandlerkeyes/Development/PersonalProjects/mocha-tests/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Pencil =\n/*#__PURE__*/\nfunction () {\n  function Pencil() {\n    var durability = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 50;\n    var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 50;\n    var eraserDurability = arguments.length > 2 ? arguments[2] : undefined;\n\n    _classCallCheck(this, Pencil);\n\n    this.durability = durability;\n    this.maxDurability = durability;\n    this.length = length;\n    this.eraserDurability = eraserDurability;\n  }\n\n  _createClass(Pencil, [{\n    key: \"getPencilDurability\",\n    value: function getPencilDurability() {\n      return this.durability;\n    }\n  }, {\n    key: \"getPencilLength\",\n    value: function getPencilLength() {\n      return this.length;\n    }\n  }, {\n    key: \"getEraserDurability\",\n    value: function getEraserDurability() {\n      return this.eraserDurability;\n    }\n  }, {\n    key: \"updatePencilDurability\",\n    value: function updatePencilDurability(character) {\n      if (character !== ' ') {\n        character === character.toLowerCase() ? this.durability -= 1 : this.durability -= 2;\n      }\n    }\n  }, {\n    key: \"updatePencilLength\",\n    value: function updatePencilLength() {\n      this.length -= 1;\n    }\n  }, {\n    key: \"writeOnPaper\",\n    value: function writeOnPaper(paper, textToWrite) {\n      for (var i = 0; i < textToWrite.length; i++) {\n        this.updatePencilDurability(textToWrite.charAt(i));\n        this.durability >= 0 ? paper += textToWrite.charAt(i) : paper += \" \";\n      }\n\n      return paper;\n    }\n  }, {\n    key: \"sharpen\",\n    value: function sharpen() {\n      if (this.length) {\n        this.updatePencilLength();\n        this.durability = this.maxDurability;\n      }\n    }\n  }, {\n    key: \"erase\",\n    value: function erase(paper, text) {\n      if (paper.lastIndexOf(text) < 0) {\n        return;\n      }\n\n      var charactersOnPaper = paper.split('');\n      var indexOfWord = paper.lastIndexOf(text) + text.length - 1;\n\n      for (var i = 0; i < text.length; i++) {\n        if (charactersOnPaper[indexOfWord - i] !== \" \") {\n          this.eraserDurability -= 1;\n        }\n\n        charactersOnPaper[indexOfWord - i] = \" \";\n      }\n\n      return charactersOnPaper.join('');\n    }\n  }, {\n    key: \"edit\",\n    value: function edit(paper, textToAdd) {\n      if (paper.lastIndexOf(\"  \") < 0) {\n        return;\n      }\n\n      var charactersOnPaper = paper.split('');\n      var indexOfBlankSpace = paper.indexOf(\"  \") + 1;\n\n      for (var i = 0; i < textToAdd.length; i++) {\n        if (charactersOnPaper[indexOfBlankSpace + i] === \" \") {\n          charactersOnPaper[indexOfBlankSpace + i] = textToAdd.charAt(i);\n        } else {\n          charactersOnPaper[indexOfBlankSpace + i] = \"@\";\n        }\n      }\n\n      return charactersOnPaper.join('');\n    }\n  }]);\n\n  return Pencil;\n}();\n\nexports[\"default\"] = Pencil;\n;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIlBlbmNpbCIsImR1cmFiaWxpdHkiLCJsZW5ndGgiLCJlcmFzZXJEdXJhYmlsaXR5IiwibWF4RHVyYWJpbGl0eSIsImNoYXJhY3RlciIsInRvTG93ZXJDYXNlIiwicGFwZXIiLCJ0ZXh0VG9Xcml0ZSIsImkiLCJ1cGRhdGVQZW5jaWxEdXJhYmlsaXR5IiwiY2hhckF0IiwidXBkYXRlUGVuY2lsTGVuZ3RoIiwidGV4dCIsImxhc3RJbmRleE9mIiwiY2hhcmFjdGVyc09uUGFwZXIiLCJzcGxpdCIsImluZGV4T2ZXb3JkIiwiam9pbiIsInRleHRUb0FkZCIsImluZGV4T2ZCbGFua1NwYWNlIiwiaW5kZXhPZiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztJQUFxQkEsTTs7O0FBQ25CLG9CQUE0RDtBQUFBLFFBQWhEQyxVQUFnRCx1RUFBbkMsRUFBbUM7QUFBQSxRQUEvQkMsTUFBK0IsdUVBQXRCLEVBQXNCO0FBQUEsUUFBbEJDLGdCQUFrQjs7QUFBQTs7QUFDMUQsU0FBS0YsVUFBTCxHQUFrQkEsVUFBbEI7QUFDQSxTQUFLRyxhQUFMLEdBQXFCSCxVQUFyQjtBQUNBLFNBQUtDLE1BQUwsR0FBY0EsTUFBZDtBQUNBLFNBQUtDLGdCQUFMLEdBQXdCQSxnQkFBeEI7QUFDRDs7OzswQ0FFcUI7QUFDcEIsYUFBTyxLQUFLRixVQUFaO0FBQ0Q7OztzQ0FFaUI7QUFDaEIsYUFBTyxLQUFLQyxNQUFaO0FBQ0Q7OzswQ0FFcUI7QUFDcEIsYUFBTyxLQUFLQyxnQkFBWjtBQUNEOzs7MkNBRXNCRSxTLEVBQVc7QUFDaEMsVUFBSUEsU0FBUyxLQUFLLEdBQWxCLEVBQXVCO0FBQ3JCQSxRQUFBQSxTQUFTLEtBQUtBLFNBQVMsQ0FBQ0MsV0FBVixFQUFkLEdBQXdDLEtBQUtMLFVBQUwsSUFBbUIsQ0FBM0QsR0FBK0QsS0FBS0EsVUFBTCxJQUFtQixDQUFsRjtBQUNEO0FBQ0Y7Ozt5Q0FFb0I7QUFDbkIsV0FBS0MsTUFBTCxJQUFlLENBQWY7QUFDRDs7O2lDQUVZSyxLLEVBQU9DLFcsRUFBYTtBQUMvQixXQUFLLElBQUlDLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdELFdBQVcsQ0FBQ04sTUFBaEMsRUFBd0NPLENBQUMsRUFBekMsRUFBNkM7QUFDM0MsYUFBS0Msc0JBQUwsQ0FBNEJGLFdBQVcsQ0FBQ0csTUFBWixDQUFtQkYsQ0FBbkIsQ0FBNUI7QUFDQSxhQUFLUixVQUFMLElBQW1CLENBQW5CLEdBQXVCTSxLQUFLLElBQUlDLFdBQVcsQ0FBQ0csTUFBWixDQUFtQkYsQ0FBbkIsQ0FBaEMsR0FBd0RGLEtBQUssSUFBSSxHQUFqRTtBQUNEOztBQUVELGFBQU9BLEtBQVA7QUFDRDs7OzhCQUVTO0FBQ1IsVUFBSSxLQUFLTCxNQUFULEVBQWlCO0FBQ2YsYUFBS1Usa0JBQUw7QUFDQSxhQUFLWCxVQUFMLEdBQWtCLEtBQUtHLGFBQXZCO0FBQ0Q7QUFDRjs7OzBCQUVLRyxLLEVBQU9NLEksRUFBTTtBQUNqQixVQUFJTixLQUFLLENBQUNPLFdBQU4sQ0FBa0JELElBQWxCLElBQTBCLENBQTlCLEVBQWlDO0FBQy9CO0FBQ0Q7O0FBRUQsVUFBTUUsaUJBQWlCLEdBQUdSLEtBQUssQ0FBQ1MsS0FBTixDQUFZLEVBQVosQ0FBMUI7QUFDQSxVQUFNQyxXQUFXLEdBQUdWLEtBQUssQ0FBQ08sV0FBTixDQUFrQkQsSUFBbEIsSUFBMEJBLElBQUksQ0FBQ1gsTUFBL0IsR0FBd0MsQ0FBNUQ7O0FBRUEsV0FBSyxJQUFJTyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHSSxJQUFJLENBQUNYLE1BQXpCLEVBQWlDTyxDQUFDLEVBQWxDLEVBQXNDO0FBQ3BDLFlBQUlNLGlCQUFpQixDQUFDRSxXQUFXLEdBQUdSLENBQWYsQ0FBakIsS0FBdUMsR0FBM0MsRUFBZ0Q7QUFDOUMsZUFBS04sZ0JBQUwsSUFBeUIsQ0FBekI7QUFDRDs7QUFDRFksUUFBQUEsaUJBQWlCLENBQUNFLFdBQVcsR0FBR1IsQ0FBZixDQUFqQixHQUFxQyxHQUFyQztBQUNEOztBQUVELGFBQU9NLGlCQUFpQixDQUFDRyxJQUFsQixDQUF1QixFQUF2QixDQUFQO0FBQ0Q7Ozt5QkFFSVgsSyxFQUFPWSxTLEVBQVc7QUFDckIsVUFBSVosS0FBSyxDQUFDTyxXQUFOLENBQWtCLElBQWxCLElBQTBCLENBQTlCLEVBQWlDO0FBQy9CO0FBQ0Q7O0FBRUQsVUFBTUMsaUJBQWlCLEdBQUdSLEtBQUssQ0FBQ1MsS0FBTixDQUFZLEVBQVosQ0FBMUI7QUFDQSxVQUFNSSxpQkFBaUIsR0FBR2IsS0FBSyxDQUFDYyxPQUFOLENBQWMsSUFBZCxJQUFzQixDQUFoRDs7QUFFQSxXQUFLLElBQUlaLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdVLFNBQVMsQ0FBQ2pCLE1BQTlCLEVBQXNDTyxDQUFDLEVBQXZDLEVBQTJDO0FBQ3pDLFlBQUlNLGlCQUFpQixDQUFDSyxpQkFBaUIsR0FBR1gsQ0FBckIsQ0FBakIsS0FBNkMsR0FBakQsRUFBc0Q7QUFDcERNLFVBQUFBLGlCQUFpQixDQUFDSyxpQkFBaUIsR0FBR1gsQ0FBckIsQ0FBakIsR0FBMkNVLFNBQVMsQ0FBQ1IsTUFBVixDQUFpQkYsQ0FBakIsQ0FBM0M7QUFDRCxTQUZELE1BRU87QUFDTE0sVUFBQUEsaUJBQWlCLENBQUNLLGlCQUFpQixHQUFHWCxDQUFyQixDQUFqQixHQUEyQyxHQUEzQztBQUNEO0FBQ0Y7O0FBRUQsYUFBT00saUJBQWlCLENBQUNHLElBQWxCLENBQXVCLEVBQXZCLENBQVA7QUFDRDs7Ozs7OztBQUNGIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9jaGFuZGxlcmtleWVzL0RldmVsb3BtZW50L1BlcnNvbmFsUHJvamVjdHMvbW9jaGEtdGVzdHMvc3JjIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGVuY2lsIHtcbiAgY29uc3RydWN0b3IoZHVyYWJpbGl0eSA9IDUwLCBsZW5ndGggPSA1MCwgZXJhc2VyRHVyYWJpbGl0eSkge1xuICAgIHRoaXMuZHVyYWJpbGl0eSA9IGR1cmFiaWxpdHk7XG4gICAgdGhpcy5tYXhEdXJhYmlsaXR5ID0gZHVyYWJpbGl0eTtcbiAgICB0aGlzLmxlbmd0aCA9IGxlbmd0aDtcbiAgICB0aGlzLmVyYXNlckR1cmFiaWxpdHkgPSBlcmFzZXJEdXJhYmlsaXR5XG4gIH1cblxuICBnZXRQZW5jaWxEdXJhYmlsaXR5KCkge1xuICAgIHJldHVybiB0aGlzLmR1cmFiaWxpdHk7XG4gIH1cblxuICBnZXRQZW5jaWxMZW5ndGgoKSB7XG4gICAgcmV0dXJuIHRoaXMubGVuZ3RoO1xuICB9XG5cbiAgZ2V0RXJhc2VyRHVyYWJpbGl0eSgpIHtcbiAgICByZXR1cm4gdGhpcy5lcmFzZXJEdXJhYmlsaXR5O1xuICB9XG5cbiAgdXBkYXRlUGVuY2lsRHVyYWJpbGl0eShjaGFyYWN0ZXIpIHtcbiAgICBpZiAoY2hhcmFjdGVyICE9PSAnICcpIHtcbiAgICAgIGNoYXJhY3RlciA9PT0gY2hhcmFjdGVyLnRvTG93ZXJDYXNlKCkgPyB0aGlzLmR1cmFiaWxpdHkgLT0gMSA6IHRoaXMuZHVyYWJpbGl0eSAtPSAyO1xuICAgIH1cbiAgfVxuXG4gIHVwZGF0ZVBlbmNpbExlbmd0aCgpIHtcbiAgICB0aGlzLmxlbmd0aCAtPSAxO1xuICB9XG5cbiAgd3JpdGVPblBhcGVyKHBhcGVyLCB0ZXh0VG9Xcml0ZSkge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGV4dFRvV3JpdGUubGVuZ3RoOyBpKyspIHtcbiAgICAgIHRoaXMudXBkYXRlUGVuY2lsRHVyYWJpbGl0eSh0ZXh0VG9Xcml0ZS5jaGFyQXQoaSkpO1xuICAgICAgdGhpcy5kdXJhYmlsaXR5ID49IDAgPyBwYXBlciArPSB0ZXh0VG9Xcml0ZS5jaGFyQXQoaSkgOiBwYXBlciArPSBcIiBcIjtcbiAgICB9XG5cbiAgICByZXR1cm4gcGFwZXI7XG4gIH1cblxuICBzaGFycGVuKCkge1xuICAgIGlmICh0aGlzLmxlbmd0aCkge1xuICAgICAgdGhpcy51cGRhdGVQZW5jaWxMZW5ndGgoKTtcbiAgICAgIHRoaXMuZHVyYWJpbGl0eSA9IHRoaXMubWF4RHVyYWJpbGl0eTtcbiAgICB9XG4gIH1cblxuICBlcmFzZShwYXBlciwgdGV4dCkge1xuICAgIGlmIChwYXBlci5sYXN0SW5kZXhPZih0ZXh0KSA8IDApIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBjaGFyYWN0ZXJzT25QYXBlciA9IHBhcGVyLnNwbGl0KCcnKTtcbiAgICBjb25zdCBpbmRleE9mV29yZCA9IHBhcGVyLmxhc3RJbmRleE9mKHRleHQpICsgdGV4dC5sZW5ndGggLSAxO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0ZXh0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAoY2hhcmFjdGVyc09uUGFwZXJbaW5kZXhPZldvcmQgLSBpXSAhPT0gXCIgXCIpIHtcbiAgICAgICAgdGhpcy5lcmFzZXJEdXJhYmlsaXR5IC09IDE7XG4gICAgICB9XG4gICAgICBjaGFyYWN0ZXJzT25QYXBlcltpbmRleE9mV29yZCAtIGldID0gXCIgXCI7XG4gICAgfVxuXG4gICAgcmV0dXJuIGNoYXJhY3RlcnNPblBhcGVyLmpvaW4oJycpO1xuICB9XG5cbiAgZWRpdChwYXBlciwgdGV4dFRvQWRkKSB7XG4gICAgaWYgKHBhcGVyLmxhc3RJbmRleE9mKFwiICBcIikgPCAwKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgY2hhcmFjdGVyc09uUGFwZXIgPSBwYXBlci5zcGxpdCgnJyk7XG4gICAgY29uc3QgaW5kZXhPZkJsYW5rU3BhY2UgPSBwYXBlci5pbmRleE9mKFwiICBcIikgKyAxO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0ZXh0VG9BZGQubGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmIChjaGFyYWN0ZXJzT25QYXBlcltpbmRleE9mQmxhbmtTcGFjZSArIGldID09PSBcIiBcIikge1xuICAgICAgICBjaGFyYWN0ZXJzT25QYXBlcltpbmRleE9mQmxhbmtTcGFjZSArIGldID0gdGV4dFRvQWRkLmNoYXJBdChpKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNoYXJhY3RlcnNPblBhcGVyW2luZGV4T2ZCbGFua1NwYWNlICsgaV0gPSBcIkBcIjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gY2hhcmFjdGVyc09uUGFwZXIuam9pbignJyk7XG4gIH1cbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "Pencil",
        "durability",
        "length",
        "eraserDurability",
        "maxDurability",
        "character",
        "toLowerCase",
        "paper",
        "textToWrite",
        "i",
        "updatePencilDurability",
        "charAt",
        "updatePencilLength",
        "text",
        "lastIndexOf",
        "charactersOnPaper",
        "split",
        "indexOfWord",
        "join",
        "textToAdd",
        "indexOfBlankSpace",
        "indexOf"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/chandlerkeyes/Development/PersonalProjects/mocha-tests/src",
      "sourcesContent": [
        "export default class Pencil {\n  constructor(durability = 50, length = 50, eraserDurability) {\n    this.durability = durability;\n    this.maxDurability = durability;\n    this.length = length;\n    this.eraserDurability = eraserDurability\n  }\n\n  getPencilDurability() {\n    return this.durability;\n  }\n\n  getPencilLength() {\n    return this.length;\n  }\n\n  getEraserDurability() {\n    return this.eraserDurability;\n  }\n\n  updatePencilDurability(character) {\n    if (character !== ' ') {\n      character === character.toLowerCase() ? this.durability -= 1 : this.durability -= 2;\n    }\n  }\n\n  updatePencilLength() {\n    this.length -= 1;\n  }\n\n  writeOnPaper(paper, textToWrite) {\n    for (let i = 0; i < textToWrite.length; i++) {\n      this.updatePencilDurability(textToWrite.charAt(i));\n      this.durability >= 0 ? paper += textToWrite.charAt(i) : paper += \" \";\n    }\n\n    return paper;\n  }\n\n  sharpen() {\n    if (this.length) {\n      this.updatePencilLength();\n      this.durability = this.maxDurability;\n    }\n  }\n\n  erase(paper, text) {\n    if (paper.lastIndexOf(text) < 0) {\n      return;\n    }\n\n    const charactersOnPaper = paper.split('');\n    const indexOfWord = paper.lastIndexOf(text) + text.length - 1;\n\n    for (let i = 0; i < text.length; i++) {\n      if (charactersOnPaper[indexOfWord - i] !== \" \") {\n        this.eraserDurability -= 1;\n      }\n      charactersOnPaper[indexOfWord - i] = \" \";\n    }\n\n    return charactersOnPaper.join('');\n  }\n\n  edit(paper, textToAdd) {\n    if (paper.lastIndexOf(\"  \") < 0) {\n      return;\n    }\n\n    const charactersOnPaper = paper.split('');\n    const indexOfBlankSpace = paper.indexOf(\"  \") + 1;\n\n    for (let i = 0; i < textToAdd.length; i++) {\n      if (charactersOnPaper[indexOfBlankSpace + i] === \" \") {\n        charactersOnPaper[indexOfBlankSpace + i] = textToAdd.charAt(i);\n      } else {\n        charactersOnPaper[indexOfBlankSpace + i] = \"@\";\n      }\n    }\n\n    return charactersOnPaper.join('');\n  }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1579628541679
  }
}